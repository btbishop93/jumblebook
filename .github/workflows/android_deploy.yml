name: Push Android build to Play Store Beta

on:
  workflow_dispatch:
    inputs:
      version_bump:
        description: 'Version bump type'
        required: true
        type: choice
        options:
          - patch
          - minor
          - major
        default: 'patch'
  push:
    branches:
      - master

jobs:
  android_deployment:
    runs-on: ubuntu-latest
    env:
      ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
      ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
      ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
      ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
      PLAY_STORE_SERVICE_ACCOUNT_JSON: ${{ secrets.PLAY_STORE_SERVICE_ACCOUNT_JSON }}
      ANDROID_GOOGLE_SERVICES_JSON: ${{ secrets.ANDROID_GOOGLE_SERVICES_JSON }}

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Set up Flutter SDK
        uses: flutter-actions/setup-flutter@v3
        with:
          channel: stable
          version: 3.24.0

      - name: Install dependencies & Lint check
        run: |
          flutter clean
          flutter pub get
          flutter analyze --fatal-infos

      - name: Install the CodeMagic CLI
        run: pip install codemagic-cli-tools

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Android keystore
        run: |
          echo $ANDROID_KEYSTORE_BASE64 | base64 -d > android/app/upload-keystore.jks
          
      - name: Setup key.properties
        run: |
          echo "storePassword=$ANDROID_KEYSTORE_PASSWORD" > android/key.properties
          echo "keyPassword=$ANDROID_KEY_PASSWORD" >> android/key.properties
          echo "keyAlias=$ANDROID_KEY_ALIAS" >> android/key.properties
          echo "storeFile=upload-keystore.jks" >> android/key.properties

      - name: Set up Google Services JSON
        run: |
          echo $ANDROID_GOOGLE_SERVICES_JSON | base64 -d > android/app/google-services.json

      - name: Set up Play Store Service Account
        run: |
          echo $PLAY_STORE_SERVICE_ACCOUNT_JSON > play-store-service-account.json

      - name: Update Version
        run: |
          file='VERSION'
          if [ -f "$file" ]; then
            IFS='.' read -r major minor patch < "$file"
            case "${{ github.event.inputs.version_bump }}" in
              "major")
                major=$((major + 1))
                minor=0
                patch=0
                ;;
              "minor")
                minor=$((minor + 1))
                patch=0
                ;;
              "patch")
                patch=$((patch + 1))
                ;;
            esac
            echo "$major.$minor.$patch" > "$file"
            echo "Updated version to $major.$minor.$patch"
          else
            echo "1.0.0" > "$file"
            echo "Created initial version 1.0.0"
          fi

      - name: Build Android App Bundle
        run: |
          file='VERSION'
          fileData=`cat $file`
          IFS='.'
          read -a versionValue <<< "$fileData"
          buildNumber=$(( ${versionValue[0]} * 1000000 + ${versionValue[1]} * 10000 + ${{github.run_number}} ))
          IFS=''
          buildName="${versionValue[0]}.${versionValue[1]}.${{github.run_number}}"
          echo "Building version $buildName ($buildNumber)"
          flutter build appbundle --release --build-number=$buildNumber --build-name=$buildName

      - name: Upload to Play Store
        run: |
          APP_FILE=$(find $(pwd) -name "*.aab")
          android-app-bundle verify \
            --bundle-path "$APP_FILE" \
            --service-account-credentials play-store-service-account.json

          android-app-bundle upload \
            --bundle-path "$APP_FILE" \
            --service-account-credentials play-store-service-account.json \
            --track beta